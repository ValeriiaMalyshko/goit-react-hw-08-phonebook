{"version":3,"file":"static/js/865.3ab58094.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Form/ContactForm.js","components/Filter/Filter.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/Contacts/Contact.js","components/Contacts/ContactList.js","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","components/Pages/ContactsProfile.js"],"sourcesContent":["import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import React, { useState } from 'react';\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import s from './Form.module.css';\n// import { connect } from 'react-redux';\nimport {\n  useCreateContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts-Slice';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [createContact, { isLoading: isAdding }] = useCreateContactMutation();\n  const { data } = useFetchContactsQuery();\n  const contacts = data;\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`There is something wrong`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || number === '') {\n      alert(`Please fill all fields`);\n      return;\n    }\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    createContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <InputGroup onSubmit={handleSubmit} hasValidation>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Text id=\"basic-addon1\"> Name</InputGroup.Text>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          requiredisInvalid\n          value={name}\n          onChange={handleChange}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please choose a username.\n        </Form.Control.Feedback>\n      </InputGroup>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Text id=\"basic-addon1\"> Number</InputGroup.Text>\n        <Form.Control\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          requiredisInvalid\n          value={number}\n          onChange={handleChange}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please choose a username.\n        </Form.Control.Feedback>\n      </InputGroup>\n      <Button\n        as=\"input\"\n        type=\"submit\"\n        value=\" Add contact\"\n        disabled={isAdding}\n      />\n    </InputGroup>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport { changeFilter } from '../../redux/filter-reducer';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <InputGroup className=\"mb-3\">\n      <InputGroup.Text id=\"basic-addon1\">Find contacts by name</InputGroup.Text>\n      <Form.Control\n        placeholder=\"Username\"\n        aria-label=\"Username\"\n        aria-describedby=\"basic-addon1\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </InputGroup>\n  );\n};\n\nexport default Filter;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React from 'react';\nimport propTypes from 'prop-types';\n// import s from './Contact.module.css';\nimport { useDeleteContactMutation } from 'redux/contacts-Slice';\nimport { Button, ListGroup } from 'react-bootstrap';\n\nexport default function Contact({ id, name, phone }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <ListGroup.Item>\n      <span>\n        {name} : {phone}\n      </span>\n      <Button\n        variant=\"danger\"\n        onClick={() => deleteContact(id)}\n        disabled={isDeleting}\n      >\n        Delete\n      </Button>\n    </ListGroup.Item>\n  );\n}\n\nContact.propTypes = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  phone: propTypes.string.isRequired,\n};\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport Contact from './Contact';\n// import s from './Contact.module.css';\nimport { useFetchContactsQuery } from 'redux/contacts-Slice';\nimport { useSelector } from 'react-redux';\nimport { ListGroup } from 'react-bootstrap';\n\nconst ContactList = () => {\n  const { data, isLoading } = useFetchContactsQuery();\n  const filter = useSelector(state => state.filter);\n\n  if (data) {\n    const visibleContacts = data.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return isLoading ? (\n      <h1> Loading....</h1>\n    ) : (\n      <ListGroup>\n        {visibleContacts.map(({ id, name, phone }) => {\n          return <Contact key={id} id={id} name={name} phone={phone} />;\n        })}\n      </ListGroup>\n    );\n  }\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Section_container__vEvWA\",\"text\":\"Section_text__eiTEQ\"};","import React from 'react';\nimport propTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ text, children }) {\n  return (\n    <div className={s.container}>\n      <h2 className={s.text}>{text}</h2>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nSection.propTypes = {\n  text: propTypes.string.isRequired,\n  children: propTypes.element,\n};\n","import ContactForm from '../Form/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../Contacts/ContactList';\nimport Section from 'components/Section/Section';\n\nconst ContactsProfile = () => {\n  return (\n    <>\n      <Section text=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section text=\"Contacts\">\n        <Filter />\n      </Section>\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsProfile;\n"],"names":["context","React","displayName","InputGroupText","createWithBsPrefix","Component","InputGroup","ref","bsPrefix","size","hasValidation","className","as","props","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","value","children","classNames","Object","assign","Text","Radio","FormCheckInput","type","Checkbox","useState","name","setName","number","setNumber","useCreateContactMutation","createContact","isAdding","isLoading","contacts","useFetchContactsQuery","data","handleChange","e","currentTarget","console","warn","onSubmit","preventDefault","some","contact","toLowerCase","alert","id","Form","pattern","title","requiredisInvalid","onChange","Button","disabled","filter","useSelector","state","dispatch","useDispatch","placeholder","changeFilter","target","ListGroupItem","active","eventKey","variant","action","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","stopPropagation","onClick","undefined","tabIndex","isActive","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Item","Contact","phone","useDeleteContactMutation","deleteContact","isDeleting","visibleContacts","includes","map","Section","text","s"],"sourceRoot":""}